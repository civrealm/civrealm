username: testcontroller
# username: myagent
# Max number of turns per game
max_turns: 1000
# The host url
host: localhost
#The port of the Freeciv server. The default is 6000. Should be 6001 if multiplayer_game is True.
client_port: 6001
# Whether to start in multiplayer mode or single player mode
multiplayer_game: True
# Whether to start hotseat game in single player mode
hotseat_game: False
# Whether to wait a observer join before start the game
wait_for_observer: False
# We consider the server is timeout after it does not respond any messages for server_timeout seconds. In pytest, we automatically set it as 5 in conftest.py.
server_timeout: 30
# Sometimes we perform an invalid action and cannot receive the response to wait_for_packs. We wait for wait_for_timeout seconds and clear the wait_for_packs to prevent the process from stucking.
wait_for_timeout: 30
# Sometimes the server is stucked for unknown reasons and will not return begin_turn packet. We wait for begin_turn_timeout seconds before we close the environment. This configuration should be CAREFULLY set when playing with human or llm agents because they may use more than 60 seconds for each of their turn. In those cases, the server will send begin_turn packet only after they finish their turns.
begin_turn_timeout: 30
# Whether in pytest mode. In pytest, we automatically set it as True in conftest.py.
pytest: False
# The number of episode scores maintained in the ParallelTensorEnv
score_window: 10
# Number of AI players
aifill: 4
# The maximum number of players
maxplayers: 10
# Whether start multiple clients for self play. When it is true, the following clients will add increasing index to their username for login to the same game. Note that when running pytest, we automatically set this as False. By doing so, different tests connecting to the same port will raise exception and force one test to re-select a random new port.
self_play: True
# The minimum number of players that allows the game to start
minp: 1
# The allowtake setting decides whether can take control/observe a player
allowtake: HAhadOo
# Whether allow an AI to control a player when the previous controller disconnects
autotoggle: disabled
# Whether end the game when some players succeed under victory conditions, option: enabled, disabled
endvictory: enabled
# Victory condition options: SPACERACE|ALLIED|CULTURE. If a certain victory condition is not set, the calculation logic for that victory condition will be skipped
victories: "SPACERACE|ALLIED"
# whether to open chatbox in the web interface, option: enabled, disabled
openchatbox: enabled
# The type of runner
runner_type: "parallel"

# Parameters for parallel running
# How many epoch to run. Each epoch runs batch_size_run envs.
epoch_num: 1
# How many envs run simultaneously to sample experience
batch_size_run: 5
# The port used by the first env, the other parallel envs use those ports following this port
port_start: 6300

debug:
  # Records the game state and available actions at every step.
  # **Warning**: generates many log files if True. Turned off by default.
  record_action_and_observation: False

  # Take screenshots during playing
  # *wait_for_observer* flag should be set to *True* if enable screenshots
  # you can exec 'update_javascript_for_clean_screenshot' command first for generating more clean screenshots
  # **Warning**: generates many log files if True. Turned off by default.
  take_screenshot: False
  global_view_screenshot: True
  sleep_time_after_turn: 0.0
  # If true, auto save game in every turn begining. The save will be deleted in the end of that turn unless the program finds some issues in that turn.
  autosave: True
  # If true, will save the game when using KeyboardInterrupt. Note that when using this, we should disable autosave. Otherwise, the game will be saved in the beginning of every turn and cannot be saved again when KeyboardInterrupt.
  interrupt_save: False
  # Password used to login to the freeciv web account
  password: civrealm
  # load_game: "testcontroller_T230_2023-09-08-09_14"
  # load_game: "myagent_T1_2023-08-28-12_19"
  # load_game: "testcontroller_T200_2023-07-31-01_51"
  load_game: ""
  # game-reproducer
  # If True, the following random seeds (mapseed, gameseed, agentseed) are ignored
  randomly_generate_seeds: True
  # set mapseed for generating a fixed map, can overwrite the above mapseed
  mapseed: 88
  # set gameseed for fixing the behavior of random outputs
  gameseed: 1729
  # set agentseed to fix the action sequence when game/map are fixed
  agentseed: 1729
  # print debug information for tensor env
  tensor_debug: False

# The ruleset to be used
ruleset: classic

trainer:
  epoch: 300
  lr: 1.0e-5
  max_steps: 20000000
